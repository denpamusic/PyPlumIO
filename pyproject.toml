# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[project]
name = "PyPlumIO"
authors = [
    {name = "Denis Paavilainen", email = "denpa@denpa.pro"}
]
description = "PyPlumIO is a native ecoNET library for Plum ecoMAX controllers."
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.9"
keywords = ["home", "automation", "heating"]
license = {text = "MIT License"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries",
    "Topic :: Home Automation",
]
dependencies = [
    "pyserial-asyncio==0.6",
]
dynamic = ["version"]

[project.urls]
"Source Code" = "https://github.com/denpamusic/PyPlumIO"
"Bug Tracker" = "https://github.com/denpamusic/PyPlumIO/issues"

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
platforms = ["any"]
packages = ["pyplumio"]

[tool.setuptools_scm]
write_to = "pyplumio/_version.py"

[tool.black]
target-version = ["py39"]

[tool.isort]
profile = "black"
force_sort_within_sections = true
combine_as_imports = true

[tool.flake8]
exclude = ".git,.tox,.mypy_cache,build,_version.py"
max-complexity = 25
ignore = [
    "E501",
    "W503",
    "E203",
    "D202",
    "W504",
]
noqa-require-code = true

[tool.pylint.MAIN]
py-version = "3.9"
ignore = [
    "tests",
    "_version.py",
]
jobs = 2

[tool.pylint.BASIC]
good-names = [
    "_",
    "i",
    "e",
    "j",
    "k",
    "v",
    "ip",
    "dt",
    "id",
]

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "abstract-method",
    "unused-argument",
    "too-many-arguments",
    "too-few-public-methods",
    "too-many-instance-attributes",
    "duplicate-code",
]

[tool.pylint.REPORTS]
score = false

[tool.codespell]
skip = ".git,.tox,.mypy_cache,build"

[tool.mypy]
ignore_missing_imports = true
no_strict_optional = true
exclude = [
    "build",
    ".tox",
    ".git",
]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:"
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
